import numpy as np
from matplotlib import pyplot as plt
import csv
from sklearn.manifold import TSNE


def loadDataset(filename, numattrs=4):
    """
    loads data from file
    :param filename:
    :param numattrs: number of column in file, Excluding  class column
    :return:
    """
    csvfile = open(filename, 'r')
    lines = csv.reader(csvfile)
    dataset = list(lines)
    for x in range(len(dataset)):
        for y in range(numattrs):
            dataset[x][y] = float(dataset[x][y])
    return dataset


# loading data from iris.csv
XY = loadDataset("iris.csv")
X = np.asarray(XY)[:,:4] #skipping class column
Y= np.asarray(XY)[:,4:] #taking only class column

# converting to numerical values
Y = reduce(lambda x,y: x+y,Y.tolist()) #flattening class values [[X],[Y],[X]] == > [X,Y,X]
Uniquelabels =  list(set(Y)) # Finding Number of unique labels  [X,Y]


# converting categorical class value to numerical one
YNumeric = []
for each in Y:
    YNumeric.append(Uniquelabels.index(each))
# print YNumeric

# printing after applying t-nse
X_tsne = TSNE(learning_rate=100).fit_transform(X)
plt.figure(figsize=(10, 5))
plt.subplot(121)
plt.scatter(X_tsne[:, 0], X_tsne[:, 1], c=YNumeric)


# taking synthetic data, so generated by SMOTE algorithm from Synthetic.txt file
XSynthetic = loadDataset("Synthetic.txt",3)
XSynthetic = np.asarray(XSynthetic) #skipping class
XSynthetic = np.asarray(XSynthetic)[:,:4]
YSyanthetic = []

for each in XSynthetic:
    YSyanthetic.append(0) # providing label to synthetic data

# appending synthetic data and label with original data
Xall = np.concatenate((X, XSynthetic))
Yall = []
Yall.extend(YNumeric)
Yall.extend(YSyanthetic)


# printing all after applying t-nse
X_tsne2 = TSNE(learning_rate=100).fit_transform(Xall)
plt.figure(figsize=(10, 5))
plt.scatter(X_tsne2[:, 0], X_tsne2[:, 1], c=Yall)
plt.show()